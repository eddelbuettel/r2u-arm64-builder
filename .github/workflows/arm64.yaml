# Experiment with arm64

name: arm64

on:
  #push:
  #pull_request:
  ##release:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-24.04-arm
    if: github.repository == 'eddelbuettel/r2u-arm64-builder'
    container:
      image: eddelbuettel/gha_r2u_build:noble
    outputs:
      description: 'Targets to run'
      targets_key: ${{ steps.create-targets.outputs.TARGET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Default Config and Cache
        run: |
          r -e 'r2u:::.createDefaultConfiguration()'
          r -e 'r2u:::.loadDB()'
          r -e 'r2u:::.loadAP()'
      - name: Fetch Updated Config
        uses: actions/checkout@v4
        with:
          repository: eddelbuettel/r2u-config
          path: r2u-config
      - name: Copy Updated Config
        run: |
          cp -vax r2u-config/* ~/.local/share/R/r2u
      - name: Upload Config
        uses: actions/upload-artifact@v4.4.0
        with:
          name: r2u_config
          path: ~/.local/share/R/r2u
      # - name: Compute Package Set (Initial)
      #   run: |
      #     Rscript -e 'options(width=200);r2u:::.getBuildTargets("/tmp/P.txt",nbatch=40,verbose=TRUE)'
      - name: Compute Package Set
        id: create-targets
        run: |
          Rscript -e 'options(width=200);r2u:::.getBuildTargets(Sys.getenv("GITHUB_OUTPUT"),nbatch=40,verbose=TRUE,prefix="TARGET")'
      # - name: Upload Package Set
      #   uses: actions/upload-artifact@v4.4.0
      #   with:
      #     name: package_set
      #     path: /tmp/P.txt
          
  # make_matrix:
  #   needs: setup
  #   runs-on: ubuntu-24.04-arm
  #   if: github.repository == 'eddelbuettel/r2u-arm64-builder'
  #   outputs:
  #     runmatrix: ${{ steps.makematrixstep.outputs.matrixoutput }}
  #   steps:
  #     #- name: Get Package Set
  #     #  uses: actions/download-artifact@v4.1.8
  #     #  with:
  #     #    name: package_set
  #     #    path: /tmp
  #     #- name: Show Package Set
  #     #  run: cat /tmp/P.txt
  #     - name: Show Package Set
  #       run: echo "Targets var is ${TARGETS}"
  #       env:
  #         TARGETS: ${{ needs.setup.outputs.targets_key }}
  #     ## $    
  #     ## see https://www.kenmuse.com/blog/dynamic-build-matrices-in-github-actions/
  #     - id: makematrixstep
  #       run: |
  #         #TARGETS=$(cat /tmp/P.txt)
  #         echo "TARGETS is '$TARGETS'"
  #         echo "matrixoutput=$(jq -cn --argjson environments "$TARGETS" '$environments')" 
  #         echo "matrixoutput=$(jq -cn --argjson environments "$TARGETS" '$environments')" >> $GITHUB_OUTPUT        
  #         # $"
  #       env:
  #         TARGETS: ${{ needs.setup.outputs.targets_key }}
          
  build:
    #needs: make_matrix
    needs: setup
    runs-on: ubuntu-24.04-arm
    if: github.repository == 'eddelbuettel/r2u-arm64-builder'
    container:
      image: eddelbuettel/gha_r2u_build:noble
    strategy:
      fail-fast: false
      #matrix: ${{ fromJson(needs.make_matrix.outputs.runmatrix) }}
      matrix: ${{ fromJson(needs.setup.outputs.targets_key) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Config
        uses: actions/download-artifact@v4.1.8
        with:
          name: r2u_config
          path: ~/.local/share/R/r2u
      - name: Fetch Updated Config
        uses: actions/checkout@v4
        with:
          repository: eddelbuettel/r2u-config
          path: r2u-config
      - name: Copy Updated depends.dcf
        run: |
          cp -vax r2u-config/depends.dcf r2u-config/depends.noble.dcf ~/.local/share/R/r2u
      - name: Build
        run:  r2u.r -v -d -c -f -r noble package ${{ matrix.target }}
      - name: Check
        run:  test -f /var/local/r2u/ubuntu/pool/dists/noble/main/*.deb
      - name: Upload Deb
        uses: actions/upload-artifact@v4.4.0
        with:
          name: deb-${{ matrix.target }}
          path: /var/local/r2u/ubuntu/pool/dists/noble/main/
      - name: Release
        id: release
        uses: softprops/action-gh-release@v2.2.2  # 2025-06-10: v2 is currently broken
        with:
          files: /var/local/r2u/ubuntu/pool/dists/noble/main/*deb
          make_latest: true
          prerelease: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
        continue-on-error: true
      - name: Release (Take 2)
        if: steps.release.outcome == 'failure'
        id: release2
        # we have about one in 10 or 20 uploads fail and a simple (manual)
        # rerun helps; adding this second trial may alleviate a few of these
        uses: softprops/action-gh-release@v2.2.2  # 2025-06-10: v2 is currently broken
        with:
          files: /var/local/r2u/ubuntu/pool/dists/noble/main/*deb
          make_latest: true
          prerelease: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
      - name: Release (Take 3)
        if: steps.release2.outcome == 'failure'
        # as of 2025-Sep-12 the last few days have seen a 2nd attempt fails
        # so adding a third because ... heck why not
        uses: softprops/action-gh-release@v2.2.2  # 2025-06-10: v2 is currently broken
        with:
          files: /var/local/r2u/ubuntu/pool/dists/noble/main/*deb
          make_latest: true
          prerelease: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
          
  # release_package:
  #   needs: [ make_matrix, build_packages ]
  #   runs-on: ubuntu-24.04-arm
  #   if: github.repository == 'eddelbuettel/r2u-arm64-builder'
  #   container:
  #     image: eddelbuettel/gha_r2u_build:noble
  #   strategy:
  #     fail-fast: false
  #     matrix: ${{ fromJson(needs.make_matrix.outputs.runmatrix) }}
  #   steps:
  #     - name: Get Deb
  #       uses: actions/download-artifact@v4.1.8
  #       with:
  #         name: deb-${{ matrix.target }}
  #         path: /var/local/r2u/ubuntu/pool/dists/noble/main/
  #     - name: Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: /var/local/r2u/ubuntu/pool/dists/noble/main/*deb
  #         make_latest: true
  #         prerelease: true
  #         tag_name: latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
         

